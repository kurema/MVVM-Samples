# https://github.com/ArchieCoder/MyGitHubApp
# http://www.dotnetapp.com/github-actions-for-uwp-apps-the-good-and-the-bad-and-the-ugly/

# This workflow is based on my repo's.
# https://github.com/kurema/BookViewerApp3/blob/master/.github/workflows/releasebuilder.yml

name: Release builder

on:
  push:
    tags: 'v*'
  workflow_dispatch:
  
jobs:
  release:
    runs-on: windows-latest

    env:
      Solution_Path: samples/MvvmSampleUwp.sln

    steps:

    - name: Configure Pagefile
      uses: al-cheb/configure-pagefile-action@v1.2
      with:
        minimum-size: 32GB
        maximum-size: 32GB
        disk-root: "C:"
    
    - name: Get tag
      id: tag
      if: github.event_name == 'push'
      uses: dawidd6/action-get-tag@v1

    - name: Use tag
      if: github.event_name == 'push'
      run: echo ${{steps.tag.outputs.tag}}

    - name: Extract version from tag
      uses: Amadevus/pwsh-script@v2
      id: getVersion
      with:
        script: |
          if ($github.event_name -eq 'push'){
            ("${{steps.tag.outputs.tag}}").Split("v")[1]
          } else {
            'test'
          }

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Build the sideload solution
      run: msbuild $env:Solution_Path /p:Platform=x86 /p:Configuration=$env:Configuration /p:AppxBundle=$env:AppxBundle /p:UapAppxPackageBuildMode=$env:BuildMode /p:AppxBundlePlatforms="x86|x64|ARM|ARM64" /p:AppxPackageDir=C:\DeployOutput /p:PackageCertificateKeyFile=$env:SigningCertificate /restore 
      env:
        AppxBundle: Always
        BuildMode: StoreUpload
        Configuration: Release
   
    - name: Create archive
      run: Compress-Archive -Path C:\DeployOutput\* -DestinationPath C:\DeployOutput\StorePackage_${{steps.getVersion.outputs.result}}.zip

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.event_name == 'push'
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{steps.tag.outputs.tag}}
        draft: false
        prerelease: false

    - name: Update release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      if: github.event_name == 'push'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: C:\DeployOutput\StorePackage_${{steps.getVersion.outputs.result}}.zip
        asset_name: StorePackage_${{steps.getVersion.outputs.result}}.zip
        asset_content_type: application/zip
        
    - name: Upload to artifact 
      uses: actions/upload-artifact@v2
      if: github.event_name == 'workflow_dispatch'
      with:
        name: StorePackage
        path: C:\DeployOutput\StorePackage_${{steps.getVersion.outputs.result}}.zip
